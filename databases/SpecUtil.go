package databases

import (
	"github.com/gin-gonic/gin"
)

// Generated by https://quicktype.io

type Spec struct {
	ShowAsMenu   bool          `json:"show_as_menu"`
	Name         string        `json:"name"`
	IsBpmn       bool          `json:"is_bpmn"`
	IsUsertask   bool          `json:"is_usertask"`
	CanBulk      bool          `json:"can_bulk"`
	CanCreate    bool          `json:"can_create"`
	CanDelete    bool          `json:"can_delete"`
	CanEdit      bool          `json:"can_edit"`
	CanDetail    bool          `json:"can_detail"`
	Label        string        `json:"label"`
	BaseURL      string        `json:"base_url"`
	Path         string        `json:"path"`
	Description  string        `json:"description"`
	HeaderAction []Action      `json:"header_action"`
	FieldAction  []Action      `json:"field_action"`
	Languages    Languages     `json:"languages"`
	Fields       []FieldsSpec  `json:"fields"`
	Relations    []interface{} `json:"relations"`
}

type Action struct {
	Label       string   `json:"label"`
	ActionLabel string   `json:"action_label"`
	Method      string   `json:"method"`
	FormType    string   `json:"form_type"`
	Path        string   `json:"path"`
	Icon        string   `json:"icon"`
	Type        string   `json:"type"`
	Confirm     *Confirm `json:"confirm,omitempty"`
}

type Confirm struct {
	Title       string `json:"title"`
	Message     string `json:"message"`
	ConfirmText string `json:"confirm_text"`
	CancelText  string `json:"cancel_text"`
}

type FieldsSpec struct {
	Name             string   `json:"name"`
	Label            string   `json:"label"`
	Required         bool     `json:"required"`
	Searchable       bool     `json:"searchable"`
	Filterable       bool     `json:"filterable"`
	Sortable         bool     `json:"sortable"`
	Type             string   `json:"type"`
	FormFieldType    string   `json:"form_field_type"`
	Primary          bool     `json:"primary"`
	IsHiddenInCreate bool     `json:"is_hidden_in_create"`
	IsHiddenInEdit   bool     `json:"is_hidden_in_edit"`
	IsHiddenInList   bool     `json:"is_hidden_in_list"`
	IsHiddenInDetail bool     `json:"is_hidden_in_detail"`
	Rules            []string `json:"rules"`
	Format           string   `json:"format"`
	Prefix           string   `json:"prefix"`
	Suffix           string   `json:"suffix"`
	ListOrder        int64    `json:"list_order"`
	CreateOrder      int64    `json:"create_order"`
	EditOrder        int64    `json:"edit_order"`
}

type Languages struct {
	PaginationInfo string `json:"pagination_info"`
	EmptyData      string `json:"empty_data"`
	FilterTitle    string `json:"filter_title"`
	FilterSubmit   string `json:"filter_submit"`
	FilterReset    string `json:"filter_reset"`
	FilterCancel   string `json:"filter_cancel"`
}

func BuildSpec(c *gin.Context, path string, model interface{}) (Spec, error) {

	return Spec{
		ShowAsMenu:   true,
		Name:         "User",
		IsBpmn:       false,
		IsUsertask:   false,
		CanBulk:      true,
		CanCreate:    true,
		CanDelete:    true,
		CanEdit:      true,
		CanDetail:    true,
		Label:        "User",
		BaseURL:      "http://localhost:8080",
		Path:         "/api/v1/users",
		Description:  "User",
		HeaderAction: []Action{},
		FieldAction:  []Action{},
		Languages: Languages{
			PaginationInfo: "Showing {{start}} to {{end}} of {{total}} entries",
			EmptyData:      "No data available in table",
			FilterTitle:    "Filter",
			FilterSubmit:   "Submit",
			FilterReset:    "Reset",
			FilterCancel:   "Cancel",
		},
		Fields: []FieldsSpec{
			{
				Name:             "id",
				Label:            "ID",
				Required:         false,
				Searchable:       false,
				Filterable:       false,
				Sortable:         false,
				Type:             "integer",
				FormFieldType:    "text",
				Primary:          true,
				IsHiddenInCreate: true,
				IsHiddenInEdit:   true,
				IsHiddenInList:   true,
				IsHiddenInDetail: true,
				Rules:            []string{},
				Format:           "",
				Prefix:           "",
				Suffix:           "",
				ListOrder:        0,
				CreateOrder:      0,
				EditOrder:        0,
			},
		},
		Relations: []interface{}{},
	}, nil

}
